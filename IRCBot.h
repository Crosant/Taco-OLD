/*  * File:   IRCBot.h * Author: Florian * * Created on 20. Februar 2015, 22:45 */#pragma once#include <iostream>#include <string.h>#include <vector>#include <thread>#include <pthread.h>#include <boost/algorithm/string.hpp>#include <cppconn/driver.h>#include <cppconn/exception.h>#include <cppconn/resultset.h>#include <cppconn/statement.h>#include <cppconn/prepared_statement.h>#include "main.h"class IRCBot {public:    IRCConnection* connection;    IRCBot();    IRCBot(const IRCBot& orig);    virtual ~IRCBot();    void queueMessage(std::string chan, std::string message);    void join(std::string chan);    void part(IRCChatListener* l);    void part(std::string l);    void receive();    void send();    void start();    std::vector<IRCCommand*> cmds;    std::vector<IRCUser*> users;    void registerCMD(IRCCommand *cmd);    void addUser(std::string, std::string, int, std::vector<std::string>);    void rehash();    sql::Statement *stmt;private:    std::deque<std::pair<std::string, std::string>> messages;    std::vector<IRCChatListener*> chatListeners;    std::vector<std::string> chans;    int socket;    double time;    IRCStatusListener* status;    sql::Driver *driver;    sql::Connection *con;    sql::ResultSet *res;    sql::PreparedStatement *pstmt;    TwitchListener * twitch;};